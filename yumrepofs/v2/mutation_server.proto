// yfs2 (Yumrepofs2) virtual read-write-many Yum repository server
// Copyright (C) 2023 Mustafa Gezen
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
syntax = "proto3";

package yumrepofs.v2;

option java_multiple_files = true;
option java_outer_classname = "MutationServerProto";
option java_package = "org.resf.peridot.yumrepofs.v2";
option go_package = "go.resf.org/peridot/yumrepofs/pb/v2;yfs2pb";

service MutationServer {
  // StartTransaction starts a new transaction.
  rpc StartTransaction(StartTransactionRequest) returns (StartTransactionResponse);

  // CommitTransaction commits a transaction.
  rpc CommitTransaction(CommitTransactionRequest) returns (CommitTransactionResponse);

  // AbortTransaction aborts a transaction.
  rpc AbortTransaction(AbortTransactionRequest) returns (AbortTransactionResponse);

  // UploadRpm uploads a RPM file.
  rpc UploadRpm(stream UploadRpmRequest) returns (UploadRpmResponse);

  // UploadModuleMetadata uploads a module metadata file.
  rpc UploadModuleMetadata(UploadModuleMetadataRequest) returns (UploadModuleMetadataResponse);
}

message StartTransactionRequest {}

message StartTransactionResponse {
  // Transaction ID.
  string transaction_id = 1;

  // Project name
  string project_name = 2;
}

message CommitTransactionRequest {
  // Transaction ID.
  string transaction_id = 1;
}

message CommitTransactionResponse {}

message AbortTransactionRequest {
  // Transaction ID.
  string transaction_id = 1;
}

message AbortTransactionResponse {}

message UploadRpmRequest {
  // Transaction ID.
  string transaction_id = 1;

  // RPM file content.
  bytes content = 2;

  // Finished uploading?
  bool finished = 3;
}

message UploadRpmResponse {}

message UploadModuleMetadataRequest {
  // Transaction ID.
  string transaction_id = 1;

  // Module metadata file content.
  bytes content = 2;
}

message UploadModuleMetadataResponse {}
